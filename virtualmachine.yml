- hosts: localhost
  tasks:
     - block:
         - name: Create networking stack
           ansible.builtin.include_role:
             name: cloud.azure_ops.azure_manage_networking_stack
           vars:
             azure_manage_networking_stack_operation: "create"
             azure_manage_networking_stack_region: "eastus"
             azure_manage_networking_stack_resource_group: "{{ azure_resource_group }}"
             azure_manage_networking_stack_virtual_network: "vnet-{{ my_id }}"
             azure_manage_networking_stack_subnet: "subnet-{{ my_id }}"
             azure_manage_networking_stack_vnet_address_prefixes_cidr:
              - "10.10.0.0/16"
             azure_manage_networking_stack_subnet_address_prefixes_cidr: "10.10.40.0/24"
         - name: Create a load balanced virtual machine with a default network interface
           ansible.builtin.include_role:
             name: cloud.azure_ops.azure_virtual_machine_with_public_ip
           vars:
             azure_virtual_machine_with_public_ip_operation: 'create'
             azure_virtual_machine_with_public_ip_region: "eastus"
             azure_virtual_machine_with_public_ip_resource_group: "{{ azure_resource_group }}"
             azure_virtual_machine_with_public_ip_vm:
               name: "{{ azure_resource_group }}-vm-{{ my_id }}"
               admin_username: 'azureuser'
               admin_password: "{{ azure_admin_password }}"
               image:
                 offer: RHEL
                 publisher: RedHat
                 sku: 8-LVM
                 version: latest
               size: Standard_DS1_v2
               load_balancer_backend_address_pools:
                 - name: 'default'
                   load_balancer: 'existing-lb'
       rescue:
         - name: Get facts for all resource groups
           azure.azcollection.azure_rm_resourcegroup_info:
             name: "{{ azure_resource_group }}"
           register: rg_info
         - name: Debug Resource Group
           ansible.builtin.debug:
             var: rg_info
       always:
         - name: Delete virtual machine and all autocreated resources
           ansible.builtin.include_role:
             name: cloud.azure_ops.azure_virtual_machine_with_public_ip
           vars:
             azure_virtual_machine_with_public_ip_operation: "delete"
             azure_virtual_machine_with_public_ip_remove_on_absent: 'all_autocreated'
             azure_virtual_machine_with_public_ip_resource_group: "{{ azure_resource_group }}"
             azure_virtual_machine_with_public_ip_vm:
               name: "{{ azure_resource_group }}-vm-{{ my_id }}"
         - name: Delete networking stack
           ansible.builtin.include_role:
             name: cloud.azure_ops.azure_manage_networking_stack
           vars:
             azure_manage_networking_stack_operation: "delete"
             azure_manage_networking_stack_region: "eastus"
             azure_manage_networking_stack_resource_group: "{{ azure_resource_group }}"
             azure_manage_networking_stack_virtual_network: "vnet-{{ my_id }}"
             azure_manage_networking_stack_subnet: "subnet-{{ my_id }}"
             azure_manage_networking_stack_vnet_address_prefixes_cidr:
              - "10.10.0.0/16"
             azure_manage_networking_stack_subnet_address_prefixes_cidr: "10.10.40.0/24"
